{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useEffect, useReducer } from 'react';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\nimport Topbar from '../ui/topbar';\nimport { fetchAssetPairs, fetchBalance, fetchPairs, fetchTick, fetchTicks, fetchTransactions, initialState, reducer } from '../ui/store';\nimport Traders from '../ui/traders';\nexport default function layout() {\n  const {\n    0: store,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  useEffect(() => {\n    fetchPairs(dispatch);\n  }, []);\n  useEffect(() => {\n    fetchAssetPairs(dispatch);\n  }, []);\n  useEffect(() => {\n    fetchBalance(dispatch);\n  }, []);\n  useEffect(() => {\n    fetchTicks(dispatch);\n  }, []);\n  useEffect(() => {\n    const pid = setInterval(() => fetchBalance(dispatch), 10000);\n    return () => clearInterval(pid);\n  }, []);\n  useEffect(() => {\n    const pid = setInterval(() => fetchTick(dispatch), 6000);\n    return () => clearInterval(pid);\n  }, []);\n  useEffect(() => {\n    fetchTransactions(dispatch);\n    const pid = setInterval(() => fetchTransactions(dispatch), 10000);\n    return () => clearInterval(pid);\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Topbar, {\n      store: store\n    }), /*#__PURE__*/_jsx(Traders, {\n      store: store\n    })]\n  });\n}","map":{"version":3,"sources":["/home/mjl/makeMeRich/src/pages/index.tsx"],"names":["React","useEffect","useReducer","Topbar","fetchAssetPairs","fetchBalance","fetchPairs","fetchTick","fetchTicks","fetchTransactions","initialState","reducer","Traders","layout","store","dispatch","pid","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAO,iDAAP;AACA,OAAO,yCAAP;AACA,OAAO,2BAAP;AACA,OAAO,yBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,UAAxC,EAAoDC,SAApD,EAA+DC,UAA/D,EAA2EC,iBAA3E,EAA8FC,YAA9F,EAA4GC,OAA5G,QAA2H,aAA3H;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBb,UAAU,CAACS,OAAD,EAAUD,YAAV,CAApC;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU,CAACS,QAAD,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAGAd,EAAAA,SAAS,CAAC,MAAM;AAAEG,IAAAA,eAAe,CAACW,QAAD,CAAf;AAA2B,GAApC,EAAsC,EAAtC,CAAT;AAEAd,EAAAA,SAAS,CAAC,MAAM;AAAEI,IAAAA,YAAY,CAACU,QAAD,CAAZ;AAAwB,GAAjC,EAAmC,EAAnC,CAAT;AACAd,EAAAA,SAAS,CAAC,MAAM;AAAEO,IAAAA,UAAU,CAACO,QAAD,CAAV;AAAsB,GAA/B,EAAiC,EAAjC,CAAT;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,GAAG,GAAGC,WAAW,CAAC,MAAMZ,YAAY,CAACU,QAAD,CAAnB,EAA+B,KAA/B,CAAvB;AACA,WAAO,MAAMG,aAAa,CAACF,GAAD,CAA1B;AACD,GAHQ,EAGN,EAHM,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,GAAG,GAAGC,WAAW,CAAC,MAAMV,SAAS,CAACQ,QAAD,CAAhB,EAA4B,IAA5B,CAAvB;AACA,WAAO,MAAMG,aAAa,CAACF,GAAD,CAA1B;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,iBAAiB,CAACM,QAAD,CAAjB;AACA,UAAMC,GAAG,GAAGC,WAAW,CAAC,MAAMR,iBAAiB,CAACM,QAAD,CAAxB,EAAoC,KAApC,CAAvB;AACA,WAAO,MAAMG,aAAa,CAACF,GAAD,CAA1B;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,4BACE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAEF;AAAf,MADF,eAEE,KAAC,OAAD;AAAS,MAAA,KAAK,EAAEA;AAAhB,MAFF;AAAA,IADF;AAMD","sourcesContent":["import React, { useEffect, useReducer } from 'react'\n\nimport 'primereact/resources/themes/saga-blue/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\nimport 'primeflex/primeflex.css'\nimport Topbar from '../ui/topbar'\nimport { fetchAssetPairs, fetchBalance, fetchPairs, fetchTick, fetchTicks, fetchTransactions, initialState, reducer } from '../ui/store'\nimport Traders from '../ui/traders'\n\nexport default function layout() {\n  const [store, dispatch] = useReducer(reducer, initialState)\n  useEffect(() => {\n    fetchPairs(dispatch)\n  }, [])\n  useEffect(() => { fetchAssetPairs(dispatch) }, [])\n\n  useEffect(() => { fetchBalance(dispatch) }, [])\n  useEffect(() => { fetchTicks(dispatch) }, [])\n  useEffect(() => {\n    const pid = setInterval(() => fetchBalance(dispatch), 10000)\n    return () => clearInterval(pid)\n  }, [])\n  useEffect(() => {\n    const pid = setInterval(() => fetchTick(dispatch), 6000)\n    return () => clearInterval(pid)\n  }, [])\n\n  useEffect(() => {\n    fetchTransactions(dispatch)\n    const pid = setInterval(() => fetchTransactions(dispatch), 10000)\n    return () => clearInterval(pid)\n  }, [])\n\n  return (\n    <>\n      <Topbar store={store} />\n      <Traders store={store} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}