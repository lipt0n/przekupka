{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Button } from 'primereact/button';\nimport { initialState, reducer } from './store';\nimport axios from 'axios';\nexport default function TopBar() {\n  _s();\n\n  var _useReducer = useReducer(reducer, initialState),\n      store = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    var intervalPid = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var balance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/balance');\n\n            case 2:\n              balance = _context.sent;\n              console.log(balance.data);\n              dispatch({\n                type: \"SET_BALANCE\",\n                payload: balance.data\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), 10000);\n    return function () {\n      return clearInterval(intervalPid);\n    };\n  });\n\n  var leftContents = function leftContents() {\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: Object.entries(store.balance).map(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            coin = _ref3[0],\n            value = _ref3[1];\n\n        return /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Button, {\n            type: \"button\",\n            label: value,\n            className: \"p-button-warning\"\n          }), /*#__PURE__*/_jsx(Button, {\n            type: \"button\",\n            label: coin\n          }), /*#__PURE__*/_jsx(\"i\", {\n            className: \"pi pi-bars p-toolbar-separator p-mr-2\"\n          })]\n        });\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsx(Toolbar, {\n    left: leftContents\n  });\n}\n\n_s(TopBar, \"Dl20ILHLbdDbf4cVKXvzN1yWFdg=\");\n\n_c = TopBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["/home/mjl/makeMeRich/src/ui/topbar.tsx"],"names":["React","useEffect","useReducer","Toolbar","Button","initialState","reducer","axios","TopBar","store","dispatch","intervalPid","setInterval","get","balance","console","log","data","type","payload","clearInterval","leftContents","Object","entries","map","coin","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAAQC,YAAR,EAAqBC,OAArB,QAAmC,SAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAAA,oBACFN,UAAU,CAACI,OAAD,EAAUD,YAAV,CADR;AAAA,MACrBI,KADqB;AAAA,MACdC,QADc;;AAE5BT,EAAAA,SAAS,CAAC,YAAI;AACV,QAAMU,WAAW,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACNL,KAAK,CAACM,GAAN,CAAU,UAAV,CADM;;AAAA;AACtBC,cAAAA,OADsB;AAE5BC,cAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAApB;AACAP,cAAAA,QAAQ,CAAC;AAACQ,gBAAAA,IAAI,EAAC,aAAN;AAAqBC,gBAAAA,OAAO,EAACL,OAAO,CAACG;AAArC,eAAD,CAAR;;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAI7B,KAJ6B,CAA/B;AAKA,WAAO;AAAA,aAAIG,aAAa,CAACT,WAAD,CAAjB;AAAA,KAAP;AACH,GAPQ,CAAT;;AAQA,MAAMU,YAAY,GAAG,SAAfA,YAAe;AAAA,wBACjB,KAAC,KAAD,CAAO,QAAP;AAAA,gBACKC,MAAM,CAACC,OAAP,CAAed,KAAK,CAACK,OAArB,EAA8BU,GAA9B,CAAmC;AAAA;AAAA,YAAEC,IAAF;AAAA,YAAOC,KAAP;;AAAA,4BAAgB;AAAA,kCAAE,KAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAEA,KAA7B;AAAoC,YAAA,SAAS,EAAC;AAA9C,YAAF,eAAqE,KAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAED;AAA7B,YAArE,eAA0G;AAAG,YAAA,SAAS,EAAC;AAAb,YAA1G;AAAA,UAAhB;AAAA,OAAnC;AADL,MADiB;AAAA,GAArB;;AAMJ,sBAAO,KAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ;AAAf,IAAP;AAEC;;GAlBuBb,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useReducer } from 'react'\nimport { Toolbar } from 'primereact/toolbar'\nimport { Button } from 'primereact/button'\nimport {initialState,reducer} from './store'\nimport axios from 'axios'\n\nexport default function TopBar(){\n    const [store, dispatch] = useReducer(reducer, initialState)\n    useEffect(()=>{\n        const intervalPid = setInterval(async ()=>{\n            const balance = await axios.get('/balance')\n            console.log(balance.data)\n            dispatch({type:\"SET_BALANCE\", payload:balance.data})\n        },10000)\n        return ()=>clearInterval(intervalPid)\n    })\n    const leftContents = ()=> (\n        <React.Fragment>\n            {Object.entries(store.balance).map( ([coin,value])=><><Button type=\"button\" label={value} className=\"p-button-warning\" /><Button type=\"button\" label={coin} /><i className=\"pi pi-bars p-toolbar-separator p-mr-2\" /></> ) }\n        </React.Fragment>\n    )\n\nreturn <Toolbar left={leftContents} />\n\n}"]},"metadata":{},"sourceType":"module"}