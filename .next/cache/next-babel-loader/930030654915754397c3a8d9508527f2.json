{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nexport const initialState = {\n  balance: {},\n  pairs: {},\n  ticks: [],\n  closedTransactions: [],\n  assetPairs: []\n};\nexport const reducer = (state, action) => {\n  if (action.type === 'SET_BALANCE') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      balance: action.payload\n    });\n  }\n\n  if (action.type === 'SET_PAIRS') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      pairs: action.payload\n    });\n  }\n\n  if (action.type === 'ADD_TICK') {\n    const newTicks = state.ticks;\n    if (newTicks.length > 100) newTicks.shift();\n    newTicks.push(action.payload);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      ticks: newTicks\n    });\n  }\n\n  if (action.type === 'SET_TICKS') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      ticks: action.payload\n    });\n  }\n\n  if (action.type === 'SET_TRANSACTIONS') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      closedTransactions: action.payload\n    });\n  }\n\n  if (action.type === 'SET_ASSETPAIRS') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assetPairs: action.payload\n    });\n  }\n\n  return state;\n};\nexport const fetchPairs = dispatch => axios.get('/pairs').then(results => dispatch({\n  type: \"SET_PAIRS\",\n  payload: results.data\n}));\nexport const fetchBalance = dispatch => axios.get('/balance').then(results => dispatch({\n  type: \"SET_BALANCE\",\n  payload: results.data\n}));\nexport const fetchTick = dispatch => axios.get('/tick').then(results => dispatch({\n  type: \"ADD_TICK\",\n  payload: results.data\n}));\nexport const fetchTicks = dispatch => axios.get('/ticks').then(results => dispatch({\n  type: \"SET_TICKS\",\n  payload: results.data\n}));\nexport const fetchTransactions = dispatch => axios.get('/transactions').then(results => dispatch({\n  type: \"SET_TRANSACTIONS\",\n  payload: results.data\n}));\nexport const fetchAssetPairs = dispatch => axios.get('/assetPairs').then(results => dispatch({\n  type: \"SET_ASSETPAIRS\",\n  payload: results.data\n}));","map":{"version":3,"sources":["/home/mjl/makeMeRich/src/ui/store.ts"],"names":["axios","initialState","balance","pairs","ticks","closedTransactions","assetPairs","reducer","state","action","type","payload","newTicks","length","shift","push","fetchPairs","dispatch","get","then","results","data","fetchBalance","fetchTick","fetchTicks","fetchTransactions","fetchAssetPairs"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nexport const initialState:IState = {\n    balance:{},\n    pairs:{},\n    ticks:[],\n    closedTransactions:[],\n    assetPairs:[]\n}\n\nexport const reducer=(state:IState,action:IAction):IState=>{\n    if(action.type==='SET_BALANCE'){\n        return {...state, balance:action.payload}\n    }\n    if(action.type==='SET_PAIRS'){\n        return {...state, pairs:action.payload}\n    }\n    if(action.type==='ADD_TICK'){\n        const newTicks = state.ticks\n        if(newTicks.length>100)\n            newTicks.shift()\n        newTicks.push(action.payload)\n        return {...state, ticks:newTicks}\n    }\n    if(action.type==='SET_TICKS'){\n        return {...state, ticks:action.payload}\n    }\n    if(action.type==='SET_TRANSACTIONS'){\n        return {...state, closedTransactions:action.payload}\n    }\n    if(action.type==='SET_ASSETPAIRS'){\n        return {...state, assetPairs:action.payload}\n    }\n    return state\n}\n\n\nexport const fetchPairs = (dispatch:React.Dispatch<IAction>)=>axios.get('/pairs').then(results=> dispatch({type:\"SET_PAIRS\", payload:results.data}) )\nexport const fetchBalance = (dispatch:React.Dispatch<IAction>)=>axios.get('/balance').then(results=> dispatch({type:\"SET_BALANCE\", payload:results.data}) )\n\nexport const fetchTick = (dispatch:React.Dispatch<IAction>)=>axios.get('/tick').then(results=> dispatch({type:\"ADD_TICK\", payload:results.data}) )\nexport const fetchTicks = (dispatch:React.Dispatch<IAction>)=>axios.get('/ticks').then(results=> dispatch({type:\"SET_TICKS\", payload:results.data}) )\nexport const fetchTransactions = (dispatch:React.Dispatch<IAction>)=>axios.get('/transactions').then(results=> dispatch({type:\"SET_TRANSACTIONS\", payload:results.data}) )\nexport const fetchAssetPairs = (dispatch:React.Dispatch<IAction>)=>axios.get('/assetPairs').then(results=> dispatch({type:\"SET_ASSETPAIRS\", payload:results.data}) )"]},"metadata":{},"sourceType":"module"}