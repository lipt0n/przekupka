{"ast":null,"code":"export const initialState = {\n  balance: {}\n};\nexport const reducer = (state, action) => {\n  if (action.type === 'SET_BALANCE') {\n    return {\n      balance: action.payload\n    };\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/home/mjl/makeMeRich/src/ui/store.ts"],"names":["initialState","balance","reducer","state","action","type","payload"],"mappings":"AAeA,OAAO,MAAMA,YAAmB,GAAG;AAC/BC,EAAAA,OAAO,EAAC;AADuB,CAA5B;AAIP,OAAO,MAAMC,OAAO,GAAC,CAACC,KAAD,EAAcC,MAAd,KAAsC;AACvD,MAAGA,MAAM,CAACC,IAAP,KAAc,aAAjB,EAA+B;AAC3B,WAAO;AAACJ,MAAAA,OAAO,EAACG,MAAM,CAACE;AAAhB,KAAP;AACH;;AACD,SAAOH,KAAP;AACH,CALM","sourcesContent":["import { ReducerState, ReducerWithoutAction } from \"react\"\n\n\nexport interface IState {\n    balance:{\n        [key:string]:string\n    }\n}\nexport type IAction = \n| {\n    type:'SET_BALANCE'\n    payload: {\n        [key:string]:string\n    }\n}\nexport const initialState:IState = {\n    balance:{}\n}\n\nexport const reducer=(state:IState,action:IAction):IState=>{\n    if(action.type==='SET_BALANCE'){\n        return {balance:action.payload as IState[\"balance\"]}\n    }\n    return state\n}"]},"metadata":{},"sourceType":"module"}