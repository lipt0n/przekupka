{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useReducer } from 'react';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Button } from 'primereact/button';\nimport { initialState, reducer } from './store';\nimport axios from 'axios';\nexport default function TopBar() {\n  const {\n    0: store,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  useEffect(() => {\n    const intervalPid = setInterval(async () => {\n      const balance = await axios.get('/balance');\n      console.log(balance.data);\n      dispatch({\n        type: \"SET_BALANCE\",\n        payload: balance.data\n      });\n    }, 10000);\n    return () => clearInterval(intervalPid);\n  });\n\n  const leftContents = () => /*#__PURE__*/_jsx(React.Fragment, {\n    children: Object.entries(store.balance).map(([coin, value], i, {\n      length\n    }) => /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        type: \"button\",\n        label: value,\n        className: \"p-button-warning\"\n      }), /*#__PURE__*/_jsx(Button, {\n        type: \"button\",\n        label: coin\n      }), i, \"-\", length, i < length && /*#__PURE__*/_jsx(\"i\", {\n        className: \"pi pi-bars p-toolbar-separator p-mr-2\"\n      })]\n    }))\n  });\n\n  return /*#__PURE__*/_jsx(Toolbar, {\n    left: leftContents\n  });\n}","map":{"version":3,"sources":["/home/mjl/makeMeRich/src/ui/topbar.tsx"],"names":["React","useEffect","useReducer","Toolbar","Button","initialState","reducer","axios","TopBar","store","dispatch","intervalPid","setInterval","balance","get","console","log","data","type","payload","clearInterval","leftContents","Object","entries","map","coin","value","i","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAAQC,YAAR,EAAqBC,OAArB,QAAmC,SAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,MAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,UAAU,CAACI,OAAD,EAAUD,YAAV,CAApC;AACAJ,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,WAAW,GAAGC,WAAW,CAAC,YAAU;AACtC,YAAMC,OAAO,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,UAAV,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,IAApB;AACAP,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAC,aAAN;AAAqBC,QAAAA,OAAO,EAACN,OAAO,CAACI;AAArC,OAAD,CAAR;AACH,KAJ8B,EAI7B,KAJ6B,CAA/B;AAKA,WAAO,MAAIG,aAAa,CAACT,WAAD,CAAxB;AACH,GAPQ,CAAT;;AAQA,QAAMU,YAAY,GAAG,mBACjB,KAAC,KAAD,CAAO,QAAP;AAAA,cACKC,MAAM,CAACC,OAAP,CAAed,KAAK,CAACI,OAArB,EAA8BW,GAA9B,CAAmC,CAAC,CAACC,IAAD,EAAMC,KAAN,CAAD,EAAcC,CAAd,EAAgB;AAACC,MAAAA;AAAD,KAAhB,kBAA2B;AAAA,8BAAE,KAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAEF,KAA7B;AAAoC,QAAA,SAAS,EAAC;AAA9C,QAAF,eAAqE,KAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAED;AAA7B,QAArE,EAA2GE,CAA3G,OAA+GC,MAA/G,EAAuHD,CAAC,GAACC,MAAF,iBAAU;AAAG,QAAA,SAAS,EAAC;AAAb,QAAjI;AAAA,MAA9D;AADL,IADJ;;AAMJ,sBAAO,KAAC,OAAD;AAAS,IAAA,IAAI,EAAEP;AAAf,IAAP;AAEC","sourcesContent":["import React, { useEffect, useReducer } from 'react'\nimport { Toolbar } from 'primereact/toolbar'\nimport { Button } from 'primereact/button'\nimport {initialState,reducer} from './store'\nimport axios from 'axios'\n\nexport default function TopBar(){\n    const [store, dispatch] = useReducer(reducer, initialState)\n    useEffect(()=>{\n        const intervalPid = setInterval(async ()=>{\n            const balance = await axios.get('/balance')\n            console.log(balance.data)\n            dispatch({type:\"SET_BALANCE\", payload:balance.data})\n        },10000)\n        return ()=>clearInterval(intervalPid)\n    })\n    const leftContents = ()=> (\n        <React.Fragment>\n            {Object.entries(store.balance).map( ([coin,value],i,{length})=><><Button type=\"button\" label={value} className=\"p-button-warning\" /><Button type=\"button\" label={coin} />{i}-{length}{i<length&&<i className=\"pi pi-bars p-toolbar-separator p-mr-2\" />}</> ) }\n        </React.Fragment>\n    )\n\nreturn <Toolbar left={leftContents} />\n\n}"]},"metadata":{},"sourceType":"module"}