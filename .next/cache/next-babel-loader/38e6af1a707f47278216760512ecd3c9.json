{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nexport var initialState = {\n  balance: {},\n  pairs: {}\n};\nexport var reducer = function reducer(state, action) {\n  if (action.type === 'SET_BALANCE') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      balance: action.payload\n    });\n  }\n\n  if (action.type === 'SET_PAIRS') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      pairs: action.payload\n    });\n  }\n\n  return state;\n};\nexport var fetchPairs = function fetchPairs(dispatch) {\n  return axios.get('/pairs').then(function (results) {\n    return dispatch({\n      type: \"SET_PAIRS\",\n      payload: results.data\n    });\n  });\n};\nexport var fetchBalance = function fetchBalance(dispatch) {\n  return axios.get('/balance').then(function (results) {\n    return dispatch({\n      type: \"SET_BALANCE\",\n      payload: results.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/mjl/makeMeRich/src/ui/store.ts"],"names":["axios","initialState","balance","pairs","reducer","state","action","type","payload","fetchPairs","dispatch","get","then","results","data","fetchBalance"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAmB,GAAG;AAC/BC,EAAAA,OAAO,EAAC,EADuB;AAE/BC,EAAAA,KAAK,EAAC;AAFyB,CAA5B;AAKP,OAAO,IAAMC,OAAO,GAAC,SAARA,OAAQ,CAACC,KAAD,EAAcC,MAAd,EAAsC;AACvD,MAAGA,MAAM,CAACC,IAAP,KAAc,aAAjB,EAA+B;AAC3B,2CAAWF,KAAX;AAAkBH,MAAAA,OAAO,EAACI,MAAM,CAACE;AAAjC;AACH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAc,WAAjB,EAA6B;AACzB,2CAAWF,KAAX;AAAkBF,MAAAA,KAAK,EAACG,MAAM,CAACE;AAA/B;AACH;;AACD,SAAOH,KAAP;AACH,CARM;AAWP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD;AAAA,SAAoCV,KAAK,CAACW,GAAN,CAAU,QAAV,EAAoBC,IAApB,CAAyB,UAAAC,OAAO;AAAA,WAAGH,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAC,WAAN;AAAmBC,MAAAA,OAAO,EAACK,OAAO,CAACC;AAAnC,KAAD,CAAX;AAAA,GAAhC,CAApC;AAAA,CAAnB;AACP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACL,QAAD;AAAA,SAAoCV,KAAK,CAACW,GAAN,CAAU,UAAV,EAAsBC,IAAtB,CAA2B,UAAAC,OAAO;AAAA,WAAGH,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAC,aAAN;AAAqBC,MAAAA,OAAO,EAACK,OAAO,CAACC;AAArC,KAAD,CAAX;AAAA,GAAlC,CAApC;AAAA,CAArB","sourcesContent":["import axios from \"axios\"\n\nexport const initialState:IState = {\n    balance:{},\n    pairs:{}\n}\n\nexport const reducer=(state:IState,action:IAction):IState=>{\n    if(action.type==='SET_BALANCE'){\n        return {...state, balance:action.payload}\n    }\n    if(action.type==='SET_PAIRS'){\n        return {...state, pairs:action.payload}\n    }\n    return state\n}\n\n\nexport const fetchPairs = (dispatch:React.Dispatch<IAction>)=>axios.get('/pairs').then(results=> dispatch({type:\"SET_PAIRS\", payload:results.data}) )\nexport const fetchBalance = (dispatch:React.Dispatch<IAction>)=>axios.get('/balance').then(results=> dispatch({type:\"SET_BALANCE\", payload:results.data}) )\n"]},"metadata":{},"sourceType":"module"}