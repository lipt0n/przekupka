{"version":3,"file":"stockroom.umd.js","sources":["../src/util.js","../src/index.js"],"sourcesContent":["export function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n\nexport function applyUpdate(state, update) {\n\tif (Array.isArray(state)) {\n\t\tstate = state.slice(0, update.length);\n\t\tfor (let i=0; i<update.length; i++) {\n\t\t\tif (update[i]!==undefined) {\n\t\t\t\tstate[i] = applyOne(update[i], state[i]);\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tstate = assign({}, state);\n\t\tfor (let i in update) if (update.hasOwnProperty(i)) {\n\t\t\tif (update[i]===undefined) {\n\t\t\t\tdelete state[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstate[i] = applyOne(update[i], state[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn state;\n}\n\nfunction applyOne(obj, prev) {\n\tif (prev!=null && obj!=null && typeof prev==='object' && typeof obj==='object') {\n\t\treturn applyUpdate(prev, obj);\n\t}\n\treturn obj;\n}\n\n\nexport function diff(obj, prev) {\n\tlet update, i;\n\tif (Array.isArray(obj)) {\n\t\tupdate = new Array(obj.length);\n\t\tfor (i=0; i<obj.length; i++) {\n\t\t\tif (obj[i]!==prev[i]) {\n\t\t\t\tupdate[i] = diffOne(obj[i], prev[i]);\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tupdate = {};\n\t\tfor (i in obj) {\n\t\t\tif (obj.hasOwnProperty(i) && obj[i]!==prev[i]) {\n\t\t\t\tupdate[i] = diffOne(obj[i], prev[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn update;\n}\n\nfunction diffOne(obj, prev) {\n\tif (typeof obj==='object' && typeof prev==='object') {\n\t\treturn diff(obj, prev);\n\t}\n\treturn obj;\n}\n\n","import { assign, diff, applyUpdate } from './util';\n\n/** The main stockroom module, which runs on the main thread.\n *\t@name module:stockroom\n */\nlet stockroom; // eslint-disable-line\n\n\n/** Given a Web Worker instance, sets up RPC-based synchronization with a WorkerStore running within it.\n *\t@memberof module:stockroom\n *  @param {Worker} worker\t\tAn instantiated Web Worker (eg: `new Worker('./store.worker.js')`)\n *  @returns {Store} synchronizedStore - a mock unistore store instance sitting in front of the worker store.\n *\t@example\n *\timport createStore from 'stockroom'\n *\timport StoreWorker from 'worker-loader!./store.worker'\n *\tlet store = createStore(new StoreWorker)\n */\nexport default function createStore(worker) {\n\tlet listeners = [],\n\t\tstate = {},\n\t\tsendQueue = [],\n\t\tinitialized = false;\n\t\n\tfunction handleMessage({ data }) {\n\t\tif (typeof data!=='object') {}\n\t\telse if ('pop' in data) {\n\t\t\tif (data.length===1) {\n\t\t\t\tprocess(data[0]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let i=0; i<data.length; i++) process(data[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tprocess(data);\n\t\t}\n\t}\n\n\tfunction process(data) {\n\t\tlet { type, overwrite, update, action, initial, partial } = data;\n\n\t\tif (type==='@@STATE') {\n\t\t\tif (partial===true) {\n\t\t\t\tupdate = applyUpdate(state, update);\n\t\t\t\toverwrite = true;\n\t\t\t}\n\n\t\t\tsetState(update, overwrite===true, action, false);\n\n\t\t\tif (initial) {\n\t\t\t\tinitialized = true;\n\t\t\t\tprocessSendQueue();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tworker.addEventListener('message', handleMessage);\n\n\tfunction setState(update, overwrite, action, replicate) {\n\t\tlet oldState = state;\n\t\tstate = assign(overwrite ? {} : assign({}, state), update);\n\t\tif (replicate) {\n\t\t\tlet update = overwrite ? state : diff(state, oldState);\n\t\t\tsend({ type: '@@STATE', overwrite, update, action, partial: !overwrite });\n\t\t\t// send({ type: '@@STATE', overwrite, update, action });\n\t\t}\n\t\tlet currentListeners = listeners;\n\t\tfor (let i=0; i<currentListeners.length; i++) currentListeners[i](state, action);\n\t}\n\n\tfunction send(opts) {\n\t\tif (sendQueue.push(opts)===1) {\n\t\t\tsetTimeout(processSendQueue);\n\t\t}\n\t}\n\n\tfunction processSendQueue() {\n\t\tif (initialized && sendQueue.length>0) {\n\t\t\tworker.postMessage(sendQueue);\n\t\t\tsendQueue.length = 0;\n\t\t}\n\t}\n\t\n\tfunction unsubscribe(listener) {\n\t\tlet out = [];\n\t\tfor (let i=0; i<listeners.length; i++) {\n\t\t\tif (listeners[i]===listener) {\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout.push(listeners[i]);\n\t\t\t}\n\t\t}\n\t\tlisteners = out;\n\t}\n\n\treturn {\n\t\taction(actionCreator) {\n\t\t\treturn (...params) => {\n\t\t\t\tlet action = typeof actionCreator==='function' ? actionCreator(...params) : actionCreator;\n\t\t\t\tif (typeof action==='string') action = { type: action, params: params.filter(notEvent) };\n\t\t\t\tif (action && !action.type) {\n\t\t\t\t\t// console.warn('Action running on main thread: ', actionCreator.name);\n\t\t\t\t\tsetState(action, false, actionCreator.name, true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// console.log('ACTION', action.type, ...(action.params || [action.payload]));\n\t\t\t\t\tsend({ type: '@@ACTION', action });\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tsetState(update, overwrite, action) {\n\t\t\treturn setState(update, overwrite, action, true);\n\t\t},\n\t\tgetState() {\n\t\t\treturn state;\n\t\t},\n\t\tsubscribe(listener) {\n\t\t\tlisteners.push(listener);\n\t\t\treturn () => { unsubscribe(listener); };\n\t\t},\n\t\tunsubscribe\n\t};\n}\n\n// Filter out DOM Events\nconst notEvent = e => !(e instanceof Event);\n"],"names":["assign","obj","props","let","i","applyUpdate","state","update","Array","isArray","slice","length","undefined","applyOne","hasOwnProperty","prev","diff","diffOne","const","notEvent","e","Event","worker","listeners","sendQueue","initialized","process","data","overwrite","action","initial","setState","processSendQueue","replicate","oldState","send","type","partial","currentListeners","opts","push","setTimeout","postMessage","unsubscribe","listener","out","addEventListener","ref","actionCreator","params","filter","name","getState","subscribe"],"mappings":"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"}